{
	"info": {
		"_postman_id": "b4bde8b3-cc52-4b70-a5d1-cfdaa3bf5ace",
		"name": "idata2306",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20037440"
	},
	"item": [
		{
			"name": "week3",
			"item": [
				{
					"name": "Book",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Test\",\r\n    \"year\": 2023,\r\n    \"numberOfPages\": 500\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/books",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"books"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "week5",
			"item": [
				{
					"name": "2: GET all books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response contains array\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(Array.isArray(jsonData)).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Number of elements in array is 7\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(7);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/books",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "3: non-existing book",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "4: ADD a book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Body contains an integer\", function () {\r",
									"    var responseAsInt = parseInt(pm.response.text());\r",
									"    pm.expect(responseAsInt > 0).to.equal(true);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"new_book_id\", pm.response.text());"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Learning web design, 5th edition\",\r\n    \"year\": 2018,\r\n    \"numberOfPages\": 736\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{LOCAL_BASE}}/{{new_book_id}}",
							"host": [
								"{{LOCAL_BASE}}"
							],
							"path": [
								"{{new_book_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5: GET all books including the new one",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "9: GET the new book",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete non-existing book",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Delete newly-created book",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get deleted book",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Try delete again - fail",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	]
}